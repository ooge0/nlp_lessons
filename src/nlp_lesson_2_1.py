# Example_2_1  Пример полносвязной многослойной нейросети прямого распространения (Fully meshed feedforward network).
import numpy as np

def act(x): # << функция активации
    return 0 if x < 0.5 else 1


def go(house, rock, attr):
    x = np.array([house, rock, attr]) # вектор входного сигнала. 1й, входной слой НС. Матрица 1х3, значения которой мы определяем подавая различный набор характеристик "мальчика"
    w11 = [0.3, 0.3, 0]  # весовые коэфициенты 1го нейрона скрытого слоя
    w12 = [0.4, -0.5, 1]  # весовые коэфициенты для 2го нейрона скрытого слоя
    weight1 = np.array([w11, w12])  # определяем новую матрицу весов скрытого слоя - векетор связи,  матрица 2x3
    weight2 = np.array([-1, 1])  # определяем новую матрицу весов выходного слоя, - векетор связи, вектор 1х2

    sum_hidden = np.dot(weight1, x)  # вычисляем сумму на ВХОДАХ нейронов скрытого слоя
    print("Значения сумм на нейронах скрытого слоя: " + str(sum_hidden))

    out_hidden = np.array([act(x) for x in sum_hidden]) # "пропускаем" вектор суммы весов скрытого слоя через функцию активациию так получаем цвектор с каждого нейрона скрытого слоя.
    print("Значения на выходах нейронов скрытого слоя: " + str(out_hidden))

    sum_end = np.dot(weight2, out_hidden) # вычисляем сумму на ВЫХОДНОМ нейроне выходного слоя
    y = act(sum_end)
    print("Выходное значение НС: " + str(y))

    return y

# здесь мы указываем набор качеств мальчика.то что у него есть и что он умеет.
house = 1
rock = 0
attr = 1

res = go(house, rock, attr)
if res == 1:
    print("Ты мне нравишься")
else:
    print("Созвонимся")
